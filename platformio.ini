; PlatformIO Project Configuration File
; FanPulse Step 1-R: Web-Streamed Sound Capture (ESP32-S3)
;
; Build options: build flags, source filter
; Upload options: custom upload port, speed and extra flags
; Library options: dependencies, extra library storages
; Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino

; Serial Monitor Configuration
monitor_speed = 921600
monitor_filters = esp32_exception_decoder

; Build Flags for FanPulse Audio Processing
build_flags = 
    -D MIC_SAMPLE_RATE=16000
    -D BOARD_HAS_PSRAM
    -D PSRAM_SIZE=8388608
    -D FLASH_SIZE=16777216
    -D USE_PSRAM
    -D WEBSOCKET_CHUNK_MS=250
    -D ARDUINOJSON_USE_DOUBLE=0
    -D CONFIG_ARDUHAL_LOG_DEFAULT_LEVEL=3
    -mfix-esp32-psram-cache-issue
    ; Step 2: Edge Processing Configuration
    -D EDGE_PROCESSING_WINDOW_MS=500
    -D BASELINE_WINDOW_SEC=30
    -D PEAK_HOLD_MS=5000
    -D BATCH_WINDOW_SEC=10
    -D FFT_CHANT_MIN_HZ=20
    -D FFT_CHANT_MAX_HZ=1500
    ; HTTPS Server Configuration
    -D CONFIG_ESP_HTTP_SERVER_ENABLE=1
    -D CONFIG_ESP_HTTPS_SERVER_ENABLE=1

board_build.psram_size  = 8MB

; Embed certificate files
board_build.embed_files = 
    certificates/server.pem
    certificates/key.pem

; Required Libraries for HTTPS Web Audio Streaming & DSP
lib_deps = 
    ArduinoJson@^6.21.3

; Board Configuration for ESP32-S3
board_build.arduino.memory_type = qio_opi
board_build.partitions = huge_app.csv
board_upload.flash_size = 8MB
board_upload.maximum_size = 8388608
